<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- dataSource 설정, spring-jdbc 모듈 사용, spring 에서 jdbc 를 통해 mysql 에 접속할 수 있게 함 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" ></property>
		
		<property name="url"
			value="jdbc:log4jdbc:mysql://127.0.0.1:3308/healthyme?useSSL=false&amp;serverTimezone=Asia/Seoul" ></property>
		<property name="username" value="root" ></property>
		<property name="password" value="hkit1234" ></property>
	</bean>


	<!-- mybatis-spring 모듈 사용. -->
	<!-- DataSource 설정으로 JDBC 연결후, MyBatis와 MySql을 연동시킴. 
	SqlSessionFactory : myBatis와 스프링의 Connection 생성. -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">

		<!-- JDBC커넥션을 처리하는 DataSource와 mybatis를 연결. -->
		<property name="dataSource" ref="dataSource" ></property>

		<!-- mybatis-config파일을 스프링과 함께 작동하도록 연결함 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml" ></property>
		
		<!-- MyBatis가 동작하면 XML Mapper를 인식하도록 함. -->
		<property name="mapperLocations"
			value="classpath:mappers/**/*Mapper.xml" ></property>
	</bean>
	
	
	<!-- MyBatis에서 DAO를 이용하는 경우, SqlSessionTemplate라는 것을 이용해서 DAO를 
		구현. mybatis-spring에서 제공하는 SqlSessionTempalte객체는 기본적인 트랜잭션 관리나 쓰레드 처리의 안정성등을 
		보장해주고, 개발자들이 직접 DB 연결, 종료작업하는 것을 줄여줌. SqlSessionFactory를 생성자로 주입함. -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" ></constructor-arg>
	</bean>


	<!-- 스프링이 MemberDAOImpl가 있는 패키지를 스캔해야만 @Repository 어노테이션이 작동해서 
		스프링의 빈으로 등록함. 패키지탐색기에서 MemberDAOImpl.java 파일 아이콘 우측상단에 s글자가 보이면 등록된 것임. -->
	<context:component-scan
		base-package="com.healthyme.dao" />
		
	<context:component-scan
		base-package="com.healthyme.service" />
		
	<!-- aop -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>	
	
	<!-- 트랜잭션 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>	 
	
	<tx:annotation-driven />
</beans>
